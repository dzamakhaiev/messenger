services:

  rabbitmq-ci:
    container_name: rabbitmq-ci
    image: "rabbitmq:alpine"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
    networks:
      - backend-ci
    volumes:
      - rabbitmq-ci:/var/lib/rabbitmq

  postgres-ci:
    container_name: postgres-ci
    image: "postgres:alpine"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
    networks:
      - backend-ci
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-ci:/var/lib/postgresql/data

  listener-ci:
    container_name: listener-ci
    build:
      context: .
      no_cache: true
      dockerfile: Dockerfile
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5
        window: 60s
    depends_on:
      - rabbitmq-ci
      - postgres-ci
    networks:
      - backend-ci
    environment:
      CI_RUN: 1
      BRANCH_NAME: $BRANCH_NAME
      SERVICE_NAME: listener-ci
    volumes:
      - logs-ci:/messenger/logs
    command: sh -c "sleep 10 && python listener.py"

  sender-ci:
    container_name: sender-ci
    build:
      context: .
      no_cache: true
      dockerfile: Dockerfile
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5
        window: 60s
    depends_on:
      - rabbitmq-ci
      - postgres-ci
    networks:
      - backend-ci
    environment:
      CI_RUN: 1
      SERVICE_NAME: sender-ci
      BRANCH_NAME: $BRANCH_NAME
    volumes:
      - logs-ci:/messenger/logs
    command: sh -c "sleep 10 && python sender.py"

  nginx-ci:
    container_name: nginx-ci
    image: "dzamakhaiev/messenger-nginx-ci"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 3
        window: 60s
    depends_on:
      - listener-ci
    networks:
      backend-ci:
        ipv4_address: 172.29.152.100
    command: sh -c "sleep 20 && nginx -g 'daemon off;'"

networks:
  backend-ci:
    external: true

volumes:
  logs-ci:
  postgres-ci:
  rabbitmq-ci: