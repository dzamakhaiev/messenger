name: Messenger CI pipeline

on:
  pull_request:
    branches:
      - master

jobs:

  pylint:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint --fail-under=8.0 $(git ls-files '*.py')

  unit:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [ "3.12" ]

    needs: pylint

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python3 -m unittest discover

  integration:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [ "3.12" ]

    needs: unit

    env:
      CI_RUN: 1
      BRANCH_NAME: 'master'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get branch name
        shell: bash
        run: |
          echo "$BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo $BRANCH_NAME
          echo $GITHUB_REF
          echo ${{ github.ref }}

      - name: Create docker network
        run: |
          docker network create --subnet=172.29.152.0/16 backend-ci

      - name: Run messenger application
        run: |
          docker compose -f ./messenger-ci.yaml up nginx-ci listener-ci sender-ci rabbitmq-ci postgres-ci -d

      - name: Wait until all services are started
        run: |
          sleep 30

      - name: Run integration tests
        run: |
          docker compose -f ./messenger-ci.yaml up integration-ci
          if [ $? -ne 0 ]; then
            echo "Integration tests failed!"
            exit 1
          fi

      - name: Close messenger application
        if: always()
        run: |
          docker compose -f ./messenger-ci.yaml down nginx-ci listener-ci sender-ci rabbitmq-ci postgres-ci integration-ci

      - name: Remove docker network
        if: always()
        run: |
          docker network rm backend-ci