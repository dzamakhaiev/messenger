name: Coverage report

on:
  pull_request:
    branches:
      - master

  workflow_call:
    inputs: {}

jobs:

  coverage:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [ "3.12" ]

    env:
      CI_RUN: 1
      RUN_INSIDE_DOCKER: 1

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r tests/requirements.txt

      - name: Run docker containers for unit tests
        run: |
          docker run --rm -p 5672:5672 --name rabbitmq-ci -d rabbitmq:alpine
          docker run --rm -p 5432:5432 --name postgres-ci -d -e POSTGRES_PASSWORD=postgres postgres:alpine

      - name: Wait until all containers are started
        run: python scripts/wait_for_all_services.py rabbitmq-ci postgres-ci

      - name: Run unit tests with coverage report
        run: |
          coverage run --source=server_side -m unittest discover -s tests
          coverage report --skip-empty --show-missing
          python scripts/generate_xml_report.py

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests

      - name: Remove coverage report
        run: rm coverage.xml && rm .coverage

      - name: Stop created containers
        if: always()
        run: docker stop rabbitmq-ci postgres-ci