version: "3"
services:

  rabbitmq-ci:
    container_name: rabbitmq-ci
    image: "rabbitmq:alpine"
    restart: on-failure
    networks:
      - backend-ci

  postgres-ci:
    container_name: postgres-ci
    image: "postgres:alpine"
    restart: on-failure
    networks:
      - backend-ci
    environment:
      POSTGRES_PASSWORD: postgres-ci
    volumes:
      - ./server_side/database:/var/lib/postgresql

  listener-1-ci:
    container_name: listener-1-ci
    image: "dzamakhaiev/messenger"
    restart: on-failure
    depends_on:
      - rabbitmq-ci
      - postgres-ci
    networks:
      - backend-ci
    environment:
      CI_RUN: 1
      SERVICE_NAME: listener-1-ci
    volumes:
      - logs-ci:/messenger/server_side/logs
    command: sh -c "sleep 10 && git pull && gunicorn -w 2 -k gevent -b 0.0.0.0:5000 'listener:app'"

  listener-2-ci:
    container_name: listener-2-ci
    image: "dzamakhaiev/messenger"
    restart: on-failure
    depends_on:
      - rabbitmq-ci
      - postgres-ci
    networks:
      - backend-ci
    environment:
      CI_RUN: 1
      SERVICE_NAME: listener-2
    volumes:
      - logs-ci:/messenger/server_side/logs
    command: sh -c "sleep 10 && git pull && gunicorn -w 2 -k gevent -b 0.0.0.0:5000 'listener:app'"

  sender-ci:
    container_name: sender-ci
    image: "dzamakhaiev/messenger"
    restart: on-failure
    depends_on:
      - rabbitmq-ci
      - postgres-ci
    networks:
      - backend-ci
    environment:
      CI_RUN: 1
      SERVICE_NAME: sender-ci
    volumes:
      - logs-ci:/messenger/server_side/logs
    command: sh -c "sleep 10 && git pull && python sender.py"

  nginx-ci:
    container_name: nginx-ci
    image: "dzamakhaiev/messenger-nginx"
    restart: on-failure
    ports:
      - "5001:5000"
    depends_on:
      - listener-1-ci
      - listener-2-ci
    networks:
      - backend-ci
    command: sh -c "sleep 15 && nginx -g 'daemon off;'"

networks:
  backend-ci:
    driver: bridge

volumes:
  logs-ci: